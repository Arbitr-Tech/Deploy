version: "3.9"

services:
  cargo-way-app:
    dns: 8.8.8.8
    build:
      context: ./server
      dockerfile: ./docker/Dockerfile
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      - cargo-way-postgres
      - cargo-way-minio
      - cargo-way-kafka
    networks:
      - app-network

  cargo-way-postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - app-network

  cargo-way-minio:
    image: minio/minio:latest
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9090:9090"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      MINIO_API_PORT: ${MINIO_API_PORT}
      MINIO_WEBUI_PORT: ${MINIO_WEBUI_PORT}
    volumes:
      - ${MINIO_VOLUME_PATH}:/data
    command: ["minio", "server", "/data", "--console-address", ":9090"]
    networks:
      - app-network

  cargo-way-zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network

  cargo-way-kafka:
    image: confluentinc/cp-kafka:latest
    restart: unless-stopped
    depends_on:
      - cargo-way-zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: cargo-way-zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://cargo-way-kafka:9092,PLAINTEXT_EXTERNAL://${EXTERNAL_HOST}:${KAFKA_EXTERNAL_HOST_PORT}
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

  cargo-way-mailhog:
    image: mailhog/mailhog:v1.0.1
    restart: unless-stopped
    ports:
      - "${SMTP_PORT}:1025"
      - "${SMTP_UI_PORT}:8025"
    networks:
      - app-network

  frontend:
    build:
      context: ./client/cargo-way
    restart: unless-stopped
    depends_on:
      - cargo-way-app
    networks:
      - app-network

  nginx-proxy:
    image: nginx:1.25-alpine
    restart: unless-stopped
    depends_on:
      - frontend
      - cargo-way-app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/ssl/cargo-way-service.ru:/etc/ssl/cargo-way-service.ru:ro
    networks:
      - app-network

volumes:
  pg_data:

networks:
  app-network:
    driver: bridge